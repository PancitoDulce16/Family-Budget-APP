rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own document
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Transactions can be read by any member of the family group
    // Transactions can only be created/updated/deleted by authenticated users
    // who are part of the family group
    match /transactions/{transactionId} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyGroupId != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyGroupId == resource.data.familyGroupId;
    }

    // Categories can be read by any member of the family group
    // Categories can be created/updated/deleted by any member of the family group
    match /categories/{categoryId} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyGroupId != null;
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyGroupId == resource.data.familyGroupId;
    }

    // Recurring transactions can be managed by any member of the family group
    match /recurringTransactions/{recurringId} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyGroupId != null;
      allow create: if request.auth != null && request.resource.data.familyGroupId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyGroupId;
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.familyGroupId == resource.data.familyGroupId;
    }
  }
}